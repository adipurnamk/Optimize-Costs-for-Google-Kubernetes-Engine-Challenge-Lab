## Task 1: Create our cluster and deploy our app

ZONE=us-central1-a
CLUSTER=onlineboutique-cluster-440
gcloud container clusters create $CLUSTER \
   --project=${DEVSHELL_PROJECT_ID} --zone=${ZONE} \
    --machine-type=n1-standard-2 --num-nodes=2

kubectl create namespace dev
kubectl create namespace prod

kubectl config set-context --current --namespace dev

git clone https://github.com/GoogleCloudPlatform/microservices-demo.git &&
cd microservices-demo && kubectl apply -f ./release/kubernetes-manifests.yaml --namespace dev

## Task 2: Migrate to an Optimized Nodepool

NODEPOOL=optimized-pool-9673
gcloud container node-pools create $NODEPOOL \
   --cluster=$CLUSTER \
   --machine-type=custom-2-3584 \
   --num-nodes=2 \
   --zone=$ZONE

for node in $(kubectl get nodes -l cloud.google.com/gke-nodepool=default-pool -o=name); do
   kubectl cordon "$node";
done
   
for node in $(kubectl get nodes -l cloud.google.com/gke-nodepool=default-pool -o=name); do
   kubectl drain --force --ignore-daemonsets --delete-local-data --grace-period=10 "$node";
done

kubectl get pods -o=wide --namespace dev

gcloud container node-pools delete default-pool \
   --cluster $CLUSTER --zone $ZONE

## Task 3: Apply a Frontend Update

kubectl create poddisruptionbudget onlineboutique-frontend-pdb \
--selector app=frontend --min-available 1  --namespace dev

KUBE_EDITOR="nano" kubectl edit deployment/frontend --namespace dev

gcr.io/qwiklabs-resources/onlineboutique-frontend:v2.1

## Task 4: Autoscale from Estimated Traffic
kubectl autoscale deployment frontend --cpu-percent=50 \
   --min=1 --max=11 --namespace dev

kubectl get hpa --namespace dev

gcloud beta container clusters update $CLUSTER \
   --enable-autoscaling --min-nodes 1 --max-nodes 6 --zone $ZONE
